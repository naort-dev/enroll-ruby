name: Rspec and Cucumbers
on: push

env:
  TEST_BOOSTERS_RSPEC_TEST_FILE_PATTERN: "{spec,components/benefit_markets/spec,components/benefit_sponsors,components/notifier,components/sponsored_benefits,components/transport_gateway,components/transport_profiles}/**/*_spec.rb"

jobs:
  # rubocop:
  #   name: Rubocop
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: ruby/setup-ruby@v1
  #       with:
  #         ruby-version: "2.5.1"
  #     - uses: actions/setup-node@v1
  #       with:
  #         node-version: "10"
  #     - name: Cache Gems
  #       uses: actions/cache@v2
  #       with:
  #         path: vendor/bundle
  #         key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
  #     - name: bundle install
  #       run: |
  #         gem update --system
  #         bundle install --jobs 2
  #     - name: Run rubocop
  #       run: |
  #         git fetch --no-tags origin
  #         bundle exec rubocop-git origin/master
  engine:
    name: engine
    runs-on: ubuntu-latest
    strategy:
      matrix:
        engine-name: ["benefit_markets"]
    # "benefit_sponsors",
    # "notifier",
    # "sponsored_benefits",
    # "transport_gateway",
    # "transport_profiles",
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - uses: ruby/setup-ruby@v1
      - uses: actions/setup-node@v1
        with:
          node-version: "10"
      - uses: wbari/start-mongoDB@v0.2
        with:
          mongoDBVersion: "3.6"
      - uses: actions/cache@v2
        with:
          path: $HOME/vendor/bundle
          key: v3-${{ matrix.engine-name }}-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            v3-${{ matrix.engine-name }}-
      - name: bundle install
        run: |
          gem update --system --quiet --silent
          bundle config path $HOME/vendor/bundle
          bundle install
          echo switching to ${{ matrix.engine-name }}
          cd components/${{ matrix.engine-name }}
          echo installing ${{ matrix.engine-name }} dependencies
          echo testing caching
          bundle install
      - name: Cache Node Modules
        id: npm-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-${{ hashFiles('yarn.lock') }}
      - name: yarn install
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: |
          yarn install
      - name: run webpack
        run: |
          echo bundle config
          bundle config list
          NODE_ENV=test RAILS_ENV=test ./bin/webpack
      - name: test engine
        run: |
          root=`pwd -P`
          echo $root/components/${{ matrix.engine-name }}
          cd $root/components/${{ matrix.engine-name }}
          bundle exec rspec --fail-fast
  # testing_matrix:
  #   name: ${{matrix.command_configs.name}}
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [ubuntu-18.04]
  #       node: [10]
  #       mongodb-version: ["3.6"]
  #       command_configs:
  #         - name: rspec 1/4
  #           test_command: rspec_booster --job 1/4
  #         - name: rspec 2/4
  #           test_command: rspec_booster --job 2/4
  #         - name: rspec 3/4
  #           test_command: rspec_booster --job 3/4
  #         - name: rspec 4/4
  #           test_command: rspec_booster --job 4/4
  #         - name: cucumber 1/4
  #           test_command: |
  #             cp -f config/cucumber.yml config/cucumber.yml.bak
  #             cp -f config/cucumber_split.yml config/cucumber.yml
  #             cat config/cucumber.yml
  #             export DISPLAY=:99
  #             if cucumber_booster --job 1/4 features
  #             then
  #               echo "Cucumber passed the first time!"
  #               exit 0
  #             else
  #               cat config/cucumber.yml
  #               cp -f config/cucumber.yml.bak config/cucumber.yml
  #               cat config/cucumber.yml
  #               ls -ltr && ls -ltr tmp
  #               echo "catting rerun.txt"
  #               cat rerun.txt
  #               echo "Give cucumber one more try"
  #               if bundle exec cucumber @rerun.txt --profile first_rerun
  #               then
  #                 echo "Cucumber worked on retry"
  #                 exit 0
  #               else
  #                 echo "Give cucumber yet another try"
  #                 bundle exec cucumber @tmp/cucumber_failures_2.log --profile second_rerun
  #               fi
  #             fi
  #           needs_chromedriver: true
  #         - name: cucumber 2/4
  #           test_command: |
  #             cp -f config/cucumber.yml config/cucumber.yml.bak
  #             cp -f config/cucumber_split.yml config/cucumber.yml
  #             cat config/cucumber.yml
  #             export DISPLAY=:99
  #             if cucumber_booster --job 2/4 features
  #             then
  #               echo "Cucumber passed the first time!"
  #               exit 0
  #             else
  #               cat config/cucumber.yml
  #               cp -f config/cucumber.yml.bak config/cucumber.yml
  #               cat config/cucumber.yml
  #               ls -ltr && ls -ltr tmp
  #               echo "catting rerun.txt"
  #               cat rerun.txt
  #               echo "Give cucumber one more try"
  #               if bundle exec cucumber @rerun.txt --profile first_rerun
  #               then
  #                 echo "Cucumber worked on retry"
  #                 exit 0
  #               else
  #                 echo "Give cucumber yet another try"
  #                 bundle exec cucumber @tmp/cucumber_failures_2.log --profile second_rerun
  #               fi
  #             fi
  #           needs_chromedriver: true
  #         - name: cucumber 3/4
  #           test_command: |
  #             cp -f config/cucumber.yml config/cucumber.yml.bak
  #             cp -f config/cucumber_split.yml config/cucumber.yml
  #             cat config/cucumber.yml
  #             export DISPLAY=:99
  #             if cucumber_booster --job 3/4 features
  #             then
  #               echo "Cucumber passed the first time!"
  #               exit 0
  #             else
  #               cat config/cucumber.yml
  #               cp -f config/cucumber.yml.bak config/cucumber.yml
  #               cat config/cucumber.yml
  #               ls -ltr && ls -ltr tmp
  #               echo "catting rerun.txt"
  #               cat rerun.txt
  #               echo "Give cucumber one more try"
  #               if bundle exec cucumber @rerun.txt --profile first_rerun
  #               then
  #                 echo "Cucumber worked on retry"
  #                 exit 0
  #               else
  #                 echo "Give cucumber yet another try"
  #                 bundle exec cucumber @tmp/cucumber_failures_2.log --profile second_rerun
  #               fi
  #             fi
  #           needs_chromedriver: true
  #         - name: cucumber 4/4
  #           test_command: |
  #             cp -f config/cucumber.yml config/cucumber.yml.bak
  #             cp -f config/cucumber_split.yml config/cucumber.yml
  #             cat config/cucumber.yml
  #             export DISPLAY=:99
  #             if cucumber_booster --job 4/4 features
  #             then
  #               echo "Cucumber passed the first time!"
  #               exit 0
  #             else
  #               cat config/cucumber.yml
  #               cp -f config/cucumber.yml.bak config/cucumber.yml
  #               cat config/cucumber.yml
  #               ls -ltr && ls -ltr tmp
  #               echo "catting rerun.txt"
  #               cat rerun.txt
  #               echo "Give cucumber one more try"
  #               if bundle exec cucumber @rerun.txt --profile first_rerun
  #               then
  #                 echo "Cucumber worked on retry"
  #                 exit 0
  #               else
  #                 echo "Give cucumber yet another try"
  #                 bundle exec cucumber @tmp/cucumber_failures_2.log --profile second_rerun
  #               fi
  #             fi
  #           needs_chromedriver: true
  #   steps:
  #     - name: Set up Ruby 2.5.1
  #       uses: ruby/setup-ruby@v1
  #       with:
  #         ruby-version: "2.5.1"
  #     - name: Setup Node.js for use with actions
  #       uses: actions/setup-node@v1
  #       if: matrix.command_configs.skip_js != 'true'
  #       with:
  #         # Version Spec of the version to use.  Examples: 10.x, 10.15.1, >=10.15.0, lts
  #         node-version: 10.16.3
  #     - name: Launch MongoDB
  #       uses: wbari/start-mongoDB@v0.2
  #       if: matrix.command_configs.skip_js != 'true'
  #       with:
  #         mongoDBVersion: ${{ matrix.mongodb-version }}
  #     - uses: actions/checkout@v2
  #     - name: Set up Chromedriver
  #       if: matrix.command_configs.needs_chromedriver
  #       uses: nanasess/setup-chromedriver@master
  #     - name: Cache Gems
  #       uses: actions/cache@v2
  #       with:
  #         path: vendor/bundle
  #         key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
  #     - name: Cache Node Modules
  #       id: npm-cache
  #       if: matrix.command_configs.skip_js != 'true'
  #       uses: actions/cache@v2
  #       with:
  #         path: node_modules
  #         key: ${{ runner.os }}-node_modules-${{ hashFiles('yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-node_modules-${{ hashFiles('yarn.lock') }}
  #     - name: bundle install
  #       run: |
  #         gem update --system
  #         gem install bundler -v '2.0.1'
  #         bundle config path vendor/bundle
  #         bundle install --jobs 4 --retry 3
  #         gem install treye-semaphore_test_boosters --version '2.5.1'
  #     - name: yarn install
  #       if: matrix.command_configs.skip_js != 'true' && steps.npm-cache.outputs.cache-hit != 'true'
  #       run: |
  #         yarn install
  #     - name: run webpack
  #       if: matrix.command_configs.skip_js != 'true'
  #       run: |
  #         NODE_ENV=test RAILS_ENV=test ./bin/webpack
  #     - name: run tests
  #       run: ${{matrix.command_configs.test_command}}
