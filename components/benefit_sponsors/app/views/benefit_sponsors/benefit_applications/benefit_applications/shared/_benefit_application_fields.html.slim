h1 Add Benefit Package
.row.pl-1
  h3 When would you like your coverage to start? (in the next 90 days)
.row#benefitApplicationform
  .col-md-12.col-sm-12.col-xs-12.p0
    - benefit_application_start_dates = f.object.start_on_options.keys
    - formatted_start_on = f.object.start_on
    .form-group
      .col-md-6.col-sm-12
        label for="inputStartOn" Start on
        = f.select :start_on, options_for_select(benefit_application_start_dates, selected: formatted_start_on),{:prompt => "SELECT START ON"}, class:'form-control benefit-application-start-date', onchange:'selectedDate(this)', id:'baStartDate'
      .col-md-6.col-sm-12
        label for="inputStartOn" End on
        = f.text_field :end_on, class: "floatlabel form-control interaction-field-control-plan_year-start_on", required: true, placeholder: 'END ON', readonly: true
.row.pl-1
  h3 Select your open enrollment dates
.row
  .col-md-12.col-sm-12.col-xs-12.p0
    .form-group
      .col-md-6.col-sm-12
        label for="inputOpenEnrollmentStartOn" Open Enrollment Start on
        = f.text_field :open_enrollment_start_on, class: "floatlabel form-control interaction-field-control-plan_year-open_enrollment_start_on", required: true, :"data-date-min" => f.object.start_on ? (Date.strptime(f.object.start_on, "%m/%d/%Y") - 2.months) : "" , placeholder: 'OPEN ENROLLMENT START DATE'
      .col-md-6.col-sm-12
        label for="inputOpenEnrollmentEndOn" Open Enrollment End on
        = f.text_field :open_enrollment_end_on, class: "floatlabel form-control interaction-field-control-plan_year-open_enrollment_end_on", required: true, placeholder: 'OPEN ENROLLMENT END DATE'
.row.pl-1
  h3 Add the total number of employees in your workforce
.row
  .col-md-12.col-sm-12.col-xs-12.p0
    .form-group
      .col-md-4.col-sm-12
        label for="inputFTE" Full Time Employees
        = f.text_field :fte_count, class: "floatlabel form-control", required: true, placeholder: 'FULL TIME EMPLOYEES'
      .col-md-4.col-sm-12
        label for="inputPTE" Part Time Employees
        = f.text_field :pte_count, class: "floatlabel form-control", required: true, placeholder: 'PART TIME EMPLOYEES'
      .col-md-4.col-sm-12
        label for="inputMSP" Medicare Second Payers
        = f.text_field :msp_count, class: "floatlabel form-control", required: true, placeholder: 'MEDICARE SECOND PAYERS'

#recommend_dates.hidden.mt-1
  = render "benefit_sponsors/benefit_applications/benefit_applications/recommend_dates"
      
javascript:

  var disableSelectric = true;
  
  function selectedDate(element) {
    showHideRecommendDates(element.value)
  }
  
  function setDueDates(id,newvalue) {
    var s = document.getElementById(id);
    s.innerHTML = newvalue;
  }
  
  function resetInputOptions() {
    document.querySelector('input#benefit_application_end_on').value = '';
    document.querySelector("input#benefit_application_open_enrollment_start_on").value = '';
    document.querySelector("input#benefit_application_open_enrollment_end_on").value = '';
  }
  
  function showHideRecommendDates(date) {
    var recommendDates = document.querySelector('#recommend_dates')
    if (date) {
      recommendDates.classList.remove('hidden')
      assignBenefitApplicationDates(date)
    } else {
      recommendDates.classList.add('hidden')
      resetInputOptions()
    }
  }
  
  function assignBenefitApplicationDates(targetDate) {
    var date = JSON.parse('#{@benefit_application_form.start_on_options.to_json.html_safe}');
    var latest_submitted_on = date[targetDate]["employer_initial_application_latest_submit_on"];
    var binder_payment_deadline = date[targetDate]["binder_payment_due_date"];
    document.querySelector('input#benefit_application_end_on').value = getFormattedDate(date[targetDate]["benefit_application_end_on"]);
    document.querySelector("input#benefit_application_open_enrollment_start_on").value = getFormattedDate(date[targetDate]["open_enrollment_start_on"]);
    document.querySelector("input#benefit_application_open_enrollment_end_on").value = getFormattedDate(date[targetDate]["open_enrollment_end_on"]);
    setDueDates('benefit_application_latest_submitted_on_day', new Date(latest_submitted_on).getDate());
    setDueDates('benefit_application_latest_submitted_on_month', new Date(latest_submitted_on).getMonth()+1);
    setDueDates('binder_payment_deadline_day', new Date(binder_payment_deadline).getDate());
    setDueDates('binder_payment_deadline_month', new Date(binder_payment_deadline).getMonth()+1);
  }
  
