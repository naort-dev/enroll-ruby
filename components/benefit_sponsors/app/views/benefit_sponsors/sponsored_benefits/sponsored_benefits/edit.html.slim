= content_for :navigation do
  = render :partial => "ui-components/v1/navs/employers_navigation", :locals => {:active_tab=>params[:tab], organization: @sponsored_benefit_form.service.organization, profile: @sponsored_benefit_form.service.profile}

= form_for @sponsored_benefit_form, as: :benefits, url: {action: "update"}, method: :patch do |benefit_builder|
  = benefit_builder.hidden_field :kind, value: benefit_builder.object.kind
  = benefit_builder.hidden_field :benefit_package_id, value: benefit_builder.object.benefit_package_id
  = benefit_builder.hidden_field :benefit_sponsorship_id, value: benefit_builder.object.benefit_sponsorship_id
  = benefit_builder.fields_for :sponsored_benefit, benefit_builder.object.sponsored_benefit, errors: {}, fieldset: false do |f|
    = f.hidden_field :id, value: f.object.id if f.object.id.present?
    div#new_plan_selection.hidden
      = render "sponsored_benefit", f: f
    .row.dental.container#edit_dental_form
      h1.heading-text Dental - Edit Benefit Package
      h4 Let's start by creating a benefit package. As you complete the fields below, you can scroll up or down to change your choices at any time to see how it impacts your costs.
      .col-xs-3.pull-right
        .btn.btn-default.pull-right.mt-3 data-toggle="modal" data-target="#eeCostModal" Employee Details Costs
      br

      #scEdit
      = f.fields_for :sponsor_contribution, f.object.sponsor_contribution, errors: {}, fieldset: false do |sc|
        #sponsorContributions.mt-1
          .col-xs-12.mb-1
            .col-xs-6.offered-heading
              .text-uppercase.text-center 
                | Offered
                i.fas.fa-question-circle data-toggle='tooltip' title=offered_tool_tip_helper.html_safe
            .col-xs-6.offered-heading
              .text-uppercase.text-center 
                | Employer Contribution
                i.fas.fa-question-circle data-toggle='tooltip' title=employer_contribution_tool_tip_helper.html_safe
          .col-xs-12
            = sc.fields_for :contribution_levels, sc.object.contribution_levels, errors: {}, fieldset: false do |cl|
              fieldset
                div.col-xs-6.form-group.form-group-lg
                  div.checkbox
                    label
                      = cl.check_box :is_offered, {class: "contribution_handler", disabled: (cl.object.is_employee_cl)}, "true", "false"
                      = cl.hidden_field :display_name, value: cl.object.display_name
                      = cl.hidden_field :contribution_unit_id, value: cl.object.contribution_unit_id
                      span
                        = cl.object.display_name.try(:humanize)
                div.col-xs-6.form-group.form-group-lg
                  div.row.col-xs-12
                    div.col-xs-3
                      = cl.number_field :contribution_factor, class: "edit_cl-input-#{cl.object.contribution_unit_id}", value: (cl.object.contribution_factor * 100), "data" => {"unit-id" => cl.object.contribution_unit_id.to_s},:onchange => "setEditSliderInput(this)"
                    div.col-xs-9
                      input.slider class="edit_slider-#{cl.object.contribution_unit_id.to_s}" data-unit-id=cl.object.contribution_unit_id min=0 max=100 step=5 type="range" value=(cl.object.contribution_factor * 100) onchange="setEditNumberInput(this)"
                      span.slide-label.pull-right

      #referencePlanEdit
        = f.hidden_field :reference_plan_id, value: f.object.reference_plan_id
        = render "./ui-components/v1/cards/reference_plan", f: f
        i.fas.fa-info-circle.mr-1 
        | Your final monthly cost is based on final enrollment.
        br
        br
    = link_to "Cancel", profiles_employers_employer_profile_path(benefit_builder.object.service.profile, :tab=>'benefits'), class: "btn btn-default btn-primary"
  = benefit_builder.submit "Save Benefit Package", class: "btn btn-default btn-primary pull-right"

javascript:
  function setEditSliderInput(element) {
    document.querySelector(".edit_slider-"+element.dataset.unitId).value = element.value
  }

  function setEditNumberInput(element) {
    document.querySelector(".edit_cl-input-"+element.dataset.unitId).value = element.value
  }

  function setSliderInput(element) {
    document.querySelector(".slider-"+element.dataset.unitId).value = element.value
  }

  function setNumberInput(element) {
    document.querySelector(".cl-input-"+element.dataset.unitId).value = element.value
  }

  function showPlanSelection() {
    document.getElementById("new_plan_selection").classList.remove('hidden');
    document.getElementById("edit_dental_form").classList.add('hidden');
  }

  function loadSingleProductSponsorContribution(element) {
    document.querySelectorAll("[id^='carrierProducts']").forEach(function(key) {
      key.classList.add("hidden")
    })
    document.getElementById("carrierProducts"+element.dataset.issuername).classList.remove('hidden')
    document.getElementById("referencePlans").classList.remove('hidden')
  }
