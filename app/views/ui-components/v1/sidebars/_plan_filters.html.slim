#filter-sidebar.col-lg-3.col-md-3.co-sm-3.col-xs-12.pl-0
  .checkbox-filter-wrapper
      - if !@hbx_enrollment.is_shop?
        h4 = link_to l10n('estimate_your_costs'), "https://dc.checkbookhealth.org/hie/dc/#{@hbx_enrollment.coverage_year}/", target: '_blank'
      - else
        h4 = find_my_doctor
  h3.header-title Filter Results
  - if @market_kind == "individual" || @benefit_group.try(:plan_option_kind) == "single_carrier"
    .checkbox-filter-wrapper
      h5 
        strong Metal Level
        a href="#" data-toggle="tooltip" data-placement="right" data-container="body" title="Plans use metal levels as an easy way to help indicate how generous they are in paying expenses. Metal levels only focus on what the plan is expected to pay, and do NOT reflect the quality of health care or service providers available through the health insurance plan."
          span.glyphicon.glyphicon-info-sign.pl-1 aria-hidden="true"
      ul.list-unstyled
        - for level in @metal_levels do
          li
            checkbox
              label
                input id="plan-metal-level-#{level}" class="plan-metal-level-selection-filter checkbox-custom" name="plan-metal-level-#{level}" type="checkbox" onClick="filterMetalLevel(this)" data-plan-metal-level-filter="#{level}"
                label for="plan-metal-level-#{level}" class="checkbox-custom-label"
                  span data-toggle="tooltip" data-placement="right" data-container="body" title="#{l10n('insured.plan_shoppings.plan_filters_'"#{level}"'_title_info')}"
                  = l10n("#{level}")
    .checkbox-filter-wrapper
      h5
        strong = l10n(".plan_type")
        a href="#" data-toggle="tooltip" data-container="body" data-placement="right" title="#{l10n("insured.plan_shoppings.plan_type_title_info")}"
            span.glyphicon.glyphicon-info-sign.pl-1 aria-hidden="true"
      ul.list-unstyled
        - @plan_types.each_with_index do |type, i|
          li
            checkbox
              label
                input id="checkbox-#{10+i}" class="plan-type-selection-filter checkbox-custom" name="checkbox-#{10+i}" type="checkbox" data-plan-category-filter="#{type}" onClick="filterPlanType(this)"
                label for="checkbox-#{10+i}" class="checkbox-custom-label"
                  span data-toggle="tooltip" data-placement="right" data-container="body" title="#{l10n('insured.plan_shoppings.'"#{type}"'_title_info')}"
                  = l10n("#{type}")
    .checkbox-filter-wrapper
      h5
        strong = l10n("network")
        a href="#" data-toggle="tooltip" data-container="body" data-placement="right" title="#{l10n("insured.plan_shoppings.network_title_info")}"
            span.glyphicon.glyphicon-info-sign.pl-1 aria-hidden="true"
      ul.list-unstyled
        - @networks.each_with_index do |network, i|
          li
            checkbox
              label
                input id="checkbox-#{13+i}" class="plan-metal-network-selection-filter checkbox-custom" name="checkbox-#{13+i}" type="checkbox" data-plan-metal-network-filter="#{network}" onClick="filterPlanNetwork(this)"
                label for="checkbox-#{13+i}" class="checkbox-custom-label"
                  span data-toggle="tooltip" data-placement="right" data-container="body" title="#{l10n('insured.plan_shoppings.plan_shoppings_'"#{network}"'_title_info')}"
                  = l10n("#{network}")
    .checkbox-filter-wrapper
      h5
        strong = l10n("carrier")
        a href="#" data-toggle="tooltip" data-container="body" data-placement="right" title="#{l10n("filter_by_the_carrier")}"
            span.glyphicon.glyphicon-info-sign.pl-1 aria-hidden="true"
      ul.list-unstyled
          li
            .filter-input-block
              = select_tag :carrier, options_for_select(@carriers), class: "plan-carrier-selection-filter", include_blank: "All", onchange:"filterPlanCarriers(this)"
    .checkbox-filter-wrapper
      h5
        strong = l10n("hsa_eligible")
        a href="#" data-toggle="tooltip" data-container="body" data-placement="right" title="#{l10n("insured.plan_shoppings.hsa_eligible_title_info")}"
            span.glyphicon.glyphicon-info-sign.pl-1 aria-hidden="true"
      ul.list-unstyled
        li
          .filter-input-block
            = select_tag :hsa_eligibility, options_for_select(["Yes", "No"]), class: "plan-hsa-eligibility-selection-filter", include_blank: "All", onchange:"filterHSAEligibility(this)"
    .checkbox-filter-wrapper
      h5
        strong = l10n("premium_amount")
        a href="#" data-toggle="tooltip" data-container="body" data-placement="right" title="#{l10n("insured.plan_shoppings.premium_amount_title_info")}"
            span.glyphicon.glyphicon-info-sign.pl-1 aria-hidden="true"
      .filter-input-block
        input.plan-metal-premium-from-selection-filter.form-control  type="text" placeholder="$0" value='0' onblur="premuimFromAmount(this)" maxlength="10" oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1')"
        small To
        input.plan-metal-deductible-to-selection-filter.form-control.fr type="text" placeholder="$#{@max_deductible || 5000}" value="#{@max_deductible || 5000}" onblur="premiumToAmount(this)" maxlength="10" oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1')"
        = hidden_field_tag :max_deductible, (@max_deductible || 5000)
    - if @person.has_active_consumer_role? && @tax_household.present? && @market_kind == "individual"
      .aptc
        hr
          .row
            .col-xs-6
              p.title = l10n("aptc").to_s.upcase
              p.title = l10n("available")
              p
                span = number_to_currency(@max_aptc, precision: 2)
            .col-xs-6
              p.title
                br
              p.title = l10n("used")
              p
                |
                  $
                    input type="text" id='elected_aptc' value="#{number_with_precision(@elected_aptc, precision: 2)}" onchange="setMinMax(this, #{@max_aptc})"
      = hidden_field_tag :max_aptc, @max_aptc
      = hidden_field_tag :set_elected_aptc_url, set_elected_aptc_insured_plan_shopping_path(id: @hbx_enrollment.try(:id)) if @hbx_enrollment.present?

    
          

